name: Test CI/CD Pipeline

on:
  push:
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  S3_BUCKET: lpsdata-airflow-1

jobs:
  basic-validation:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate project structure
      run: |
        echo "üîç Verificando estrutura do projeto..."

        # Verificar se os diret√≥rios principais existem
        if [ -d "dbt" ]; then
          echo "‚úÖ Diret√≥rio dbt encontrado"
        else
          echo "‚ùå Diret√≥rio dbt n√£o encontrado"
          exit 1
        fi

        if [ -d "airflow-local" ]; then
          echo "‚úÖ Diret√≥rio airflow-local encontrado"
        else
          echo "‚ùå Diret√≥rio airflow-local n√£o encontrado"
          exit 1
        fi

        if [ -f ".dbt/profiles.yml" ]; then
          echo "‚úÖ Arquivo profiles.yml encontrado"
        else
          echo "‚ùå Arquivo profiles.yml n√£o encontrado"
          exit 1
        fi

        echo "üéâ Estrutura do projeto validada!"

    - name: Test DBT project structure
      run: |
        echo "üîç Verificando estrutura do projeto DBT..."

        if [ -f "dbt/dbt_project.yml" ]; then
          echo "‚úÖ dbt_project.yml encontrado"
        else
          echo "‚ùå dbt_project.yml n√£o encontrado"
          exit 1
        fi

        if [ -d "dbt/models" ]; then
          echo "‚úÖ Diret√≥rio models encontrado"
        else
          echo "‚ÑπÔ∏è Diret√≥rio models n√£o encontrado (criando estrutura b√°sica...)"
          mkdir -p dbt/models
          echo "‚úÖ Diret√≥rio models criado"
        fi

        echo "üéâ Estrutura DBT validada!"

  pre-commit-lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install pre-commit
      run: |
        pip install --upgrade pip
        pip install pre-commit

    - name: Run pre-commit
      env:
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT || 'dummy_account' }}
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER || 'dummy_user' }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD || 'dummy_password' }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE || 'DUMMY_WH' }}
        SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE_DEV || 'DUMMY_DB' }}
        SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA || 'PUBLIC' }}
        SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE || 'PUBLIC' }}
        DBT_TARGET: dev
        DBT_PROFILES_DIR: ./.dbt
      run: |
        echo "üîç Executando linters com pre-commit..."

        # Instalar os hooks
        pre-commit install

        # Executar em todos os arquivos
        pre-commit run --all-files

        echo "‚úÖ Linters executados com sucesso!"
